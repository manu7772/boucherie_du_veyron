<?php

namespace site\adminBundle\Entity;

use Doctrine\ORM\QueryBuilder;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Mapping\ClassMetadata;

/**
 * EntityBaseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EntityBaseRepository extends EntityRepository {

	const ELEMENT = 'element';

	/**
	 * Recherche des entitÃ©s selon des valeurs/champ
	 * $type_related = '_self' pour dÃ©signer un champ interne
	 */
	public function findWithField(array $data, $asArray = false) {
		$asArray == true ? $getMethod = 'getArrayResult' : $getMethod = 'getResult';
		if(isset($data['type_related']) && isset($data['type_field']) && isset($data['type_values'])) {
			$qb = $this->createQueryBuilder(self::ELEMENT);
			if($data['type_related'] == '_self') {
				// champ interne
				$qb->where($qb->expr()->in(self::ELEMENT.'.'.$data['type_field'], $data['type_values']));
			} else {
				$qb
					->join(self::ELEMENT.'.'.$data['type_related'], 'entity')
					->where($qb->expr()->in('entity.'.$data['type_field'], $data['type_values']));
			}
		} else throw new Exception("Missing parameters for Repository method \"findWithField\"", 1);
		return $qb->getQuery()->$getMethod();
	}

	// public function findByField($types, $self = '_self', $asArray = false) {
	// 	$asArray == true ? $getMethod = 'getArrayResult' : $getMethod = 'getResult';
	// 	$qb = $this->createQueryBuilder(self::ELEMENT);
	// 	if(count($types) == 2 || ((count($types) == 3) && ($types['type_related'] == $self))) {
	// 		// champ interne
	// 		$qb = $this->createQueryBuilder(self::ELEMENT)
	// 			->where($qb->expr()->in(self::ELEMENT.'.'.$types['type_field'], $types['type_values']));
	// 		$qb = $this->addJoins($qb, $this->getAdds());
	// 		return $qb->getQuery()->$getMethod();
	// 	} else if(count($types) == 3) {
	// 		// champ externe
	// 		$qb->join(self::ELEMENT.'.'.$types['type_related'], 'entity')
	// 			->where($qb->expr()->in('entity.'.$types['type_field'], $types['type_values']));
	// 		$qb = $this->addJoins($qb, $this->getAdds());
	// 		return $qb->getQuery()->$getMethod();
	// 	}
	// 	return array();
	// }


}
