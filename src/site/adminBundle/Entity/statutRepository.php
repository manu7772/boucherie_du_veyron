<?php

namespace site\adminBundle\Entity;

use site\adminBundle\Entity\EntityBaseRepository;
use Doctrine\ORM\QueryBuilder;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Mapping\ClassMetadata;

use site\adminBundle\services\aetools;
use site\adminBundle\services\aeEntity;
use site\UserBundle\Entity\User;

/**
 * statutRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class statutRepository extends EntityBaseRepository {

	/**
	 * Renvoie la(les) valeur(s) par défaut --> ATTENTION : dans un array()
	 * @param $defaults = liste des éléments par défaut
	 * @return QueryBuilder
	 */
	// public function defaultValAsClosure($defaults = null) {
	// 	if($defaults === null) $defaults = array("actif");
	// 	$qb = $this->createQueryBuilder(self::ELEMENT);
	// 	$qb->where($qb->expr()->in(self::ELEMENT.'.slug', $defaults));
	// 	return $qb;
	// }

	public function findActif() {
		$qb = $this->createQueryBuilder(self::ELEMENT);
		$qb->where(self::ELEMENT.'.slug = :slug')
			->setParameter('slug', 'actif');
		return $qb->getQuery()->getOneOrNullResult();
	}

	public function findInactif() {
		$qb = $this->createQueryBuilder(self::ELEMENT);
		$qb->where(self::ELEMENT.'.slug = :slug')
			->setParameter('slug', 'inactif');
		return $qb->getQuery()->getOneOrNullResult();
	}

	public function findExpired() {
		$qb = $this->createQueryBuilder(self::ELEMENT);
		$qb->where(self::ELEMENT.'.slug = :slug')
			->setParameter('slug', 'expired');
		return $qb->getQuery()->getOneOrNullResult();
	}

	public function findDeleted() {
		$qb = $this->createQueryBuilder(self::ELEMENT);
		$qb->where(self::ELEMENT.'.slug = :slug')
			->setParameter('slug', 'deleted');
		return $qb->getQuery()->getOneOrNullResult();
	}

	public function findWebmaster() {
		$qb = $this->createQueryBuilder(self::ELEMENT);
		$qb->where(self::ELEMENT.'.slug = :slug')
			->setParameter('slug', 'webmaster');
		return $qb->getQuery()->getOneOrNullResult();
	}

	public function findTemp() {
		$qb = $this->createQueryBuilder(self::ELEMENT);
		$qb->where(self::ELEMENT.'.slug = :slug')
			->setParameter('slug', 'temp');
		return $qb->getQuery()->getOneOrNullResult();
	}


	/********************************/
	/*** CLOSURES                 ***/
	/********************************/

	public function defaultValsListClosure(aetools $aeEntities = null, $data = null) {
		$qb = $this->findAllClosure($aeEntities);
		return $qb;
	}

	public function findAllClosure(aetools $aeEntities = null) {
		$qb = $this->createQueryBuilder(self::ELEMENT);
		if($aeEntities != null) {
			$this->declareContext($aeEntities);
			$qb->where($qb->expr()->in(self::ELEMENT.'.niveau', $this->roles));
		}
		return $qb;
	}

}
